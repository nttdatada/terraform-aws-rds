name: Terraform

on:
  pull_request: 
    branchs:
      - master

jobs:
  terraform:
    name: Terrafom Stack
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: AWS Credentials
        uses: aws-actions/configure-aws-credential@v1
        with:
          aws-region: ${{ secrets.AWS_REGION}}
          aws-access-key-di: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Format
        run: terraform fmt -check
      
      - name: Terraform Init
        run: terraform init

      - name: Terraform Validade
        run: terraform validate -no-color

      #- name: Terraform Plan
      #  id: plan
      #  run: terraform plan -no-color
      #  continue-on-error: true
      
      - name: Update Pull Requests
        uses: actions/github-script@0.9.0
        env:
         PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          gitub-token: ${{ secrets.GITHUB_TOKEN }} 
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })    

        #- name: Terraform Plan Status
        #  if: steps.plan.outcome == 'failure'
        #  run: exit 1